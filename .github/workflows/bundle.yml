name: Build and push Docker images

on:
    push:
        branches:
            - main
            - staging
    workflow_dispatch:
    repository_dispatch:
        types: [doppler-env-changed]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref_name }}
    cancel-in-progress: true

jobs:
    docker:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        if: ${{ github.ref_name == 'main' || github.ref_name == 'staging' }}

        environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

        steps:
            - uses: actions/checkout@v4

            - uses: dopplerhq/cli-action@v3

            - name: Determine tag
              id: meta
              run: |
                  if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
                    echo "TAG=prd" >> $GITHUB_ENV
                  else
                    echo "TAG=stg" >> $GITHUB_ENV
                  fi
                  echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

            - name: Load env & set outputs
              id: env
              env:
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
              run: |
                  [[ -z "$DOPPLER_TOKEN" ]] && { echo "::error::DOPPLER_TOKEN not found"; exit 1; }
                  echo "tags=ghcr.io/devsellingbot/elux-api:${TAG},ghcr.io/devsellingbot/elux-api:${TAG}-${SHORT_SHA}" >> $GITHUB_OUTPUT
                  doppler secrets download --no-file --format env > .env
                  while IFS='=' read -r key value; do
                    [[ "$key" =~ (SECRET|PRIVATE|KEY|TOKEN|PASSWORD)$ ]] && echo "::add-mask::$value"
                  done < .env

            - uses: docker/setup-buildx-action@v3

            - uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - uses: docker/login-action@v3
              if: github.event_name != 'pull_request'
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/build-push-action@v6
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.env.outputs.tags }}
                  cache-from: |
                      type=local,src=/tmp/.buildx-cache
                      type=gha
                  cache-to: |
                      type=local,dest=/tmp/.buildx-cache-new,mode=max
                      type=gha,mode=max
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1
                      RELEASE_VERSION=${{ env.SHORT_SHA }}
                      SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

            - name: Move cache & cleanup
              if: always()
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache
                  rm -f .env
